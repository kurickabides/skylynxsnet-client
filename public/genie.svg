<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   id="svg2"
   xml:space="preserve"
   width="8.5in"
   height="11in"
   viewBox="0 0 815.99999 1056"
   sodipodi:docname="deadpool_genie - blue.svg"
   inkscape:version="1.0.1 (3bc2e813f5, 2020-09-07)"><metadata
     id="metadata8"><rdf:RDF><cc:Work
         rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
     id="defs6"><meshgradient
       inkscape:collect="always"
       id="meshgradient84"
       gradientUnits="userSpaceOnUse"
       x="131.339"
       y="67.780121"><meshrow
         id="meshrow86"><meshpatch
           id="meshpatch88"><stop
             path="c 10.2155,0  20.431,0  30.6465,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop90" /><stop
             path="c 0,18.3821  0,36.7642  0,55.1463"
             style="stop-color:#0000ff;stop-opacity:1"
             id="stop92" /><stop
             path="c -10.2155,0  -20.431,0  -30.6465,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop94" /><stop
             path="c 0,-18.3821  0,-36.7642  0,-55.1463"
             style="stop-color:#0000ff;stop-opacity:1"
             id="stop96" /></meshpatch></meshrow></meshgradient><meshgradient
       inkscape:collect="always"
       id="meshgradient98"
       gradientUnits="userSpaceOnUse"
       x="161.96304"
       y="41.505886"><meshrow
         id="meshrow100"><meshpatch
           id="meshpatch102"><stop
             path="c 15.816,0  31.6319,0  47.4479,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop104" /><stop
             path="c 0,27.4716  0,54.9432  0,82.4148"
             style="stop-color:#0000ff;stop-opacity:1"
             id="stop106" /><stop
             path="c -15.816,0  -31.6319,0  -47.4479,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop108" /><stop
             path="c 0,-27.4716  0,-54.9432  0,-82.4148"
             style="stop-color:#0000ff;stop-opacity:1"
             id="stop110" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1920"
     inkscape:window-height="1001"
     id="namedview4"
     inkscape:document-rotation="0"
     showgrid="false"
     units="in"
     inkscape:zoom="4"
     inkscape:cx="97.809514"
     inkscape:cy="140.44735"
     inkscape:window-x="-9"
     inkscape:window-y="-9"
     inkscape:window-maximized="1"
     inkscape:current-layer="g10" /><g
     id="g10"
     inkscape:groupmode="layer"
     inkscape:label="ink_ext_XXXXXX"
     transform="matrix(1.3333333,0,0,-1.3333333,0,333.33333)"><path
       d="m 119.434,117.628 c 2.836,-1.105 6.066,-2.324 9.808,-3.231 0.992,-0.199 1.815,-0.964 1.985,-2.013 0.226,-1.389 -0.681,-2.693 -2.041,-2.919 -5.103,-0.907 -10.432,-1.701 -15.705,-2.041 -5.3,-0.341 -10.488,-0.171 -15.2212,0.878 l -0.3125,0.086 c -0.2832,0.056 -0.595,0.198 -0.8496,0.368 -1.1348,0.794 -1.418,2.381 -0.6243,3.515 7.8236,11.112 13.6916,8.873 22.9606,5.357 z m -1.587,-4.79 -0.199,0.085 c -5.867,2.239 -9.949,3.798 -14.371,-0.369 3.147,-0.34 6.491,-0.34 9.893,-0.141 1.559,0.113 3.117,0.255 4.677,0.425 z m 51.42,-7.909 c 0.795,2.041 1.248,4.167 1.304,6.378 -0.028,0.936 -0.141,1.899 -0.34,2.835 -1.105,-0.964 -2.267,-1.814 -3.515,-2.551 -2.239,-1.361 -4.734,-2.325 -7.342,-3.005 -0.255,-0.17 -0.538,-0.284 -0.85,-0.34 -7.2,-1.559 -12.954,-6.293 -18.709,-10.9991 -2.182,-1.786 -4.365,-3.6 -6.661,-5.2438 2.806,-1.3043 5.839,-2.1832 9.241,-2.3812 4.847,-0.2828 10.544,0.7941 17.433,3.9972 5.046,4.195 7.966,7.9079 9.439,11.3099 z M 97.1543,93.2219 c 1.0195,-1.077 1.9844,-2.1821 2.8907,-3.3449 6.689,-8.5321 9.779,-18.7942 9.071,-28.9981 -0.624,-8.5891 -3.94,-17.1219 -10.1765,-24.5199 15.6475,4.989 29.3105,10.998 39.6565,18.8219 11.112,8.391 18.454,18.9363 20.353,32.598 -6.434,-2.5789 -11.963,-3.4578 -16.866,-3.175 -5.782,0.3691 -10.63,2.2973 -15.023,5.018 -0.369,0.198 -0.653,0.482 -0.879,0.8511 -0.708,1.1622 -0.341,2.7211 0.822,3.429 3.373,2.0699 6.491,4.6492 9.638,7.201 6.037,4.96 12.047,9.92 20.041,11.876 0.226,0.114 0.481,0.227 0.736,0.284 2.438,0.567 4.734,1.417 6.747,2.608 1.701,1.021 3.231,2.296 4.564,3.883 -1.984,4.252 -5.5,8.107 -10.121,11.225 -4.42,2.977 -9.807,5.301 -15.817,6.747 -0.765,-1.502 -1.757,-2.892 -3.004,-4.139 l -11.509,-11.508 -11.508,11.508 c -1.219,1.219 -2.211,2.608 -2.948,4.054 -5.896,-1.446 -11.169,-3.742 -15.5056,-6.662 -7.3711,-4.988 -11.9629,-11.82 -11.9629,-19.275 0,-3.373 0.9356,-6.605 2.6367,-9.581 1.8145,-3.175 4.4786,-6.0949 7.8516,-8.6179 0.1133,-0.0852 0.2266,-0.1981 0.3125,-0.2832 v 0"
       style="fill:#221f20;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.1"
       id="path14" /><path
       d="m 89.8691,111.534 c -1.248,0.737 -2.4375,1.615 -3.5429,2.608 -0.4539,-2.268 -0.511,-4.592 0.1699,-7.002 1.0762,-3.968 4.082,-8.39 10.2043,-13.5209 19.7296,-9.0992 29.8206,-0.8222 39.9406,7.4839 5.215,4.308 10.431,8.588 16.951,10.941 -3.941,3.628 -7.314,2.495 -12.586,0.681 -3.175,-1.106 -6.945,-2.41 -11.764,-3.26 -5.102,-0.879 -10.431,-1.701 -15.732,-2.041 -5.358,-0.341 -10.602,-0.171 -15.3635,0.907 -2.9766,0.68 -5.7547,1.729 -8.2774,3.203 z m -2.58,8.901 c 1.4453,-1.899 3.175,-3.402 5.1308,-4.592 2.0696,-1.191 4.3653,-2.041 6.8321,-2.608 4.252,-0.992 9.042,-1.134 13.945,-0.822 5.018,0.34 10.205,1.133 15.195,2.012 4.393,0.765 7.965,2.013 10.999,3.033 8.531,2.948 13.379,4.621 20.664,-5.244 0.822,-1.134 0.594,-2.693 -0.511,-3.515 -0.312,-0.226 -0.623,-0.368 -0.963,-0.425 v -0.028 C 151.324,106.715 145.57,101.981 139.815,97.2469 128.42,87.893 117.053,78.5391 94.291,89.225 c -0.1992,0.0852 -0.3965,0.1988 -0.539,0.3398 h -0.0274 c -7.1445,5.925 -10.7156,11.2822 -12.0762,16.2432 -1.4179,5.159 -0.5097,9.751 1.1907,14.145 0.4812,1.304 1.9558,1.956 3.2312,1.445 0.5098,-0.198 0.9356,-0.538 1.2188,-0.963 v 0"
       style="fill:#fefefe;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.1"
       id="path16" /><path
       d="m 137.065,153.543 v 0 c 4.848,-4.847 4.848,-12.755 0,-17.603 l -8.787,-8.815 -8.815,8.815 c -4.819,4.848 -4.819,12.756 0,17.603 v 0 c 4.847,4.848 12.783,4.848 17.602,0 v 0"
       style="fill:#221f20;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.1"
       id="path18" /><path
       d="m 122.693,184.413 c -5.271,3.458 -10.941,8.249 -8.787,15.732 -17.7165,-12.359 -24.2068,-35.802 -1.049,-43.285 -8.872,8.844 1.248,26.589 9.836,27.553 z m 21.969,-28.857 c 21.884,13.323 11.056,35.319 1.786,45.099 -7.03,7.456 -15.335,13.918 -19.162,19.446 -13.578,-24.378 -2.579,-28.347 9.723,-35.32 6.917,-3.912 15.845,-15.562 7.653,-29.225 v 0"
       style="fill:#221f20;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.1"
       id="path20" /><path
       d="m 139.021,159.723 v 0 c 5.954,-5.953 5.954,-15.676 0,-21.628 l -10.828,-10.829 -10.828,10.829 c -5.925,5.952 -5.925,15.675 0,21.628 v 0 c 5.952,5.953 15.703,5.953 21.656,0 v 0"
       style="fill:#221f20;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.1"
       id="path22" /><path
       d="m 128.278,149.83 c 5.726,-4.592 9.78,-0.425 9.78,2.154 0,2.58 -4.366,4.678 -9.78,4.678 -5.385,0 -9.779,-2.098 -9.779,-4.678 0,-2.579 3.345,-6.491 9.779,-2.154 v 0"
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.1"
       id="path24" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 147.02305,122.73191 c -8.25344,-3.48686 -13.30762,-8.68535 -15.50492,-15.94759 -0.59159,-1.95524 -0.66597,-2.61506 -0.67068,-5.94915 -0.004,-2.645356 0.1195,-4.296066 0.41835,-5.603779 2.22535,-9.737724 8.75613,-19.376774 18.07408,-26.676306 1.11976,-0.877201 2.09217,-1.594911 2.16092,-1.594911 0.0687,0 0.0141,0.478125 -0.12146,1.0625 -0.42569,1.83515 -0.11484,5.596245 0.61012,7.382197 1.50621,3.710549 4.15395,6.82241 8.61138,10.120849 l 2.54689,1.884666 -0.92189,0.171514 c -1.90453,0.354329 -4.78926,2.139076 -7.23196,4.474311 -4.97455,4.755698 -8.32332,11.453519 -9.06738,18.135509 -0.30061,2.6996 -0.16032,4.61562 0.52931,7.22925 0.55491,2.10306 0.90122,2.84801 2.25545,4.8517 0.53435,0.79063 0.88631,1.43421 0.78212,1.43018 -0.10419,-0.004 -1.21584,-0.44095 -2.47033,-0.97094 z"
       id="path44"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 194.46047,123.30234 c 1.96498,-4.02849 2.82437,-7.77548 2.80207,-12.21717 -0.0322,-6.40482 -2.02881,-11.772116 -6.42183,-17.262819 -2.97462,-3.71789 -5.12639,-5.338762 -12.91176,-9.726112 -11.53124,-6.498288 -15.36614,-10.719058 -16.26703,-17.903805 -0.7105,-5.666376 1.8976,-14.681733 6.90477,-23.867507 l 1.14287,-2.096627 1.15678,1.428437 c 2.5479,3.146251 5.0269,5.669211 12.62866,12.85265 4.36758,4.127229 9.18858,8.813943 10.71334,10.41492 13.20488,13.864999 18.63653,30.956617 13.86584,43.631193 -2.15557,5.72682 -5.99583,10.5931 -11.64332,14.75415 -1.4187,1.04529 -2.6518,1.90052 -2.74022,1.90052 -0.0884,0 0.258,-0.85852 0.76983,-1.90783 z"
       id="path46"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 163.22336,155.83625 c -4.28764,-4.34799 -8.2594,-8.58824 -8.82612,-9.42278 -1.28572,-1.8933 -2.53693,-4.58073 -3.12092,-6.7033 -0.68708,-2.49725 -0.63122,-7.50997 0.11283,-10.125 1.68399,-5.91852 5.28628,-10.26633 10.6648,-12.87193 3.35133,-1.62354 5.30579,-2.08205 8.875,-2.08205 3.38324,0 5.42684,0.44457 8.41833,1.83134 3.73135,1.72976 6.34428,3.96965 8.52162,7.305 4.52445,6.93077 4.35425,15.63839 -0.44356,22.69264 -0.81452,1.1976 -7.37191,8.14729 -14.2271,15.07826 l -2.17917,2.20325 z m 17.7494,-20.29905 c 1.36377,-0.74226 2.21633,-1.69189 2.82346,-3.14495 1.42579,-3.41242 -1.66267,-6.39116 -7.86727,-7.58776 -2.44065,-0.47069 -7.64299,-0.46513 -9.90452,0.0106 -3.44756,0.72522 -6.27276,2.13859 -7.37829,3.69117 -1.67543,2.35291 -0.0853,6.22973 3.00174,7.3182 2.20526,0.77756 5.41541,0.25455 8.14829,-1.32758 l 1.24222,-0.71915 1.29676,0.861 c 2.91992,1.93872 6.11558,2.27113 8.63761,0.89847 z"
       id="path48"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 209.96261,179.42287 c -3.94153,-4.17479 -7.147,-5.76204 -11.65866,-5.77299 -3.15224,-0.008 -4.99654,0.43054 -12.90848,3.06694 -7.20872,2.40208 -12.69503,3.82816 -13.98501,3.63518 -0.49141,-0.0735 -1.95391,-0.4624 -3.25,-0.86419 -2.29402,-0.71115 -4.15522,-1.37134 -11.33082,-4.01914 -8.56119,-3.15908 -12.49549,-3.62185 -17.08322,-2.00939 -2.63546,0.92629 -6.22218,3.73994 -8.90277,6.98391 l -0.91558,1.10802 -1.41881,-0.44724 c -3.29454,-1.03852 -7.59615,-3.68721 -9.95089,-6.12721 l -0.99558,-1.03163 0.62058,-1.17302 c 5.23042,-9.88655 16.37473,-17.87278 30.75763,-22.04154 1.42492,-0.413 2.61269,-0.72717 2.63949,-0.69815 0.0268,0.029 0.61596,0.8965 1.30925,1.92775 0.87386,1.29985 3.85505,4.46471 9.7186,10.31738 l 8.45808,8.44237 8.76431,-8.81737 c 6.30365,-6.34181 9.02685,-9.25606 9.69937,-10.37988 0.51428,-0.85937 1.06753,-1.56248 1.22945,-1.56246 0.16192,2e-5 1.80938,0.45721 3.66101,1.01599 12.69884,3.8322 22.70958,10.56316 28.25136,18.99547 0.77226,1.17507 1.56073,2.51458 1.75214,2.97669 l 0.34802,0.84019 -1.64491,1.55839 c -2.72416,2.58089 -5.68429,4.38141 -9.32322,5.67091 l -1.75,0.62014 z"
       id="path50"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 145.92895,213.451 c -4.45085,-0.54621 -9.52835,-1.95194 -14.49393,-4.0127 -2.48422,-1.03098 -2.64384,-1.14723 -5.94706,-4.33127 -3.9882,-3.84429 -5.89356,-6.30315 -7.55932,-9.75526 -1.92085,-3.98076 -2.9895,-8.96337 -2.61664,-12.20017 l 0.16513,-1.43357 1.41341,1.07958 c 4.65777,3.55768 11.188,6.01001 18.88469,7.09188 4.11951,0.57904 14.47204,0.56832 20.02872,-0.0207 8.06152,-0.85461 17.74947,-2.43654 22.566,-3.68478 1.6137,-0.4182 5.58491,-1.64235 8.82492,-2.72033 6.84354,-2.27693 8.32218,-2.6117 10.8258,-2.45103 1.95624,0.12555 4.30557,1.04507 5.75272,2.25161 l 0.71944,0.59982 -1.96944,0.81965 c -4.56268,1.89893 -10.43079,5.62632 -16.21944,10.30249 -1.925,1.55505 -5.3,4.27956 -7.5,6.05448 -8.80248,7.10168 -15.19995,10.55517 -22.125,11.94354 -2.8001,0.56139 -8.10295,0.79165 -10.75,0.4668 z"
       id="path52"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 139.05395,183.25415 -1,-0.17005 1.25,-0.93337 c 2.12585,-1.58737 3.61061,-2.04851 6.625,-2.05762 2.80219,-0.008 4.05281,0.27774 8.5,1.94527 l 2.125,0.79679 -1.5,0.17764 c -2.13939,0.25337 -14.80574,0.44442 -16,0.24134 z"
       id="path54"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 187.08763,213.43508 c -2.75634,-0.4025 -9.03368,-2.34163 -9.03368,-2.79058 0,-0.0613 1.125,-0.98854 2.5,-2.06055 1.375,-1.07201 4.24375,-3.37485 6.375,-5.11744 9.75365,-7.97491 15.55215,-11.64071 21.125,-13.35516 10.16314,-3.12663 13.11611,-4.37914 16.84783,-7.14604 l 2.00762,-1.48856 0.16831,0.89712 c 0.0926,0.49343 0.10749,2.14907 0.0332,3.67922 -0.32514,6.69347 -2.80546,11.32801 -9.78782,18.28874 l -4.0191,4.00666 -3.875,1.54141 c -4.34305,1.7276 -8.4064,2.88068 -12.125,3.44077 -2.67422,0.4028 -7.81331,0.45532 -10.21632,0.10441 z"
       id="path56"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#0000ff;fill-opacity:1;stroke-width:0.25"
       d="m 133.50476,283.14831 c 6.09046,-7.99887 9.84361,-16.48636 11.54349,-26.1048 0.57497,-3.25333 0.78006,-10.72227 0.39241,-14.29032 -0.82194,-7.56525 -3.31928,-15.52356 -6.7341,-21.45968 -0.67234,-1.16875 -1.19463,-2.15585 -1.16064,-2.19355 0.034,-0.0377 1.03258,0.15781 2.21909,0.43447 4.05815,0.94623 7.97415,1.32467 12.16394,1.17551 6.11745,-0.21779 10.65577,-1.37477 16.31638,-4.15959 l 2.94139,-1.44706 2.68361,1.32951 c 10.40582,5.15523 21.70631,5.611 34.24612,1.38122 2.94458,-0.99323 3.56216,-1.13175 3.56052,-0.79859 -0.004,0.8777 -1.29264,6.543 -2.02273,8.89478 -6.9636,22.43143 -26.35701,39.28254 -60.72377,52.76344 -5.12116,2.00886 -14.40352,5.31276 -15.59678,5.55141 l -0.76532,0.15306 z"
       id="path58"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#aa0000;fill-opacity:1;stroke-width:0.353553"
       d="m 194.50616,123.88645 c 0,-0.17026 0.37698,-1.16463 0.83773,-2.20971 1.2861,-2.91714 1.99096,-6.62369 1.98822,-10.45522 -0.005,-6.48665 -1.95752,-11.865538 -6.34634,-17.479948 -2.52397,-3.228794 -4.86767,-5.047795 -11.68241,-9.066965 -12.9919,-7.662319 -16.30051,-11.114352 -17.3741,-18.127255 -0.49688,-3.245743 0.15169,-7.779401 1.83778,-12.846491 1.06001,-3.185583 5.56017,-12.94345 5.96929,-12.94345 0.1165,0 0.84507,0.803193 1.61906,1.784873 0.77398,0.981681 6.62731,6.891679 13.00741,13.13333 6.3801,6.24165 12.65538,12.699798 13.94507,14.351438 6.28359,8.047042 10.02174,16.585685 11.08328,25.31629 0.80865,6.650698 -0.89514,13.662538 -4.66333,19.191698 -1.54316,2.26432 -5.3195,6.18677 -7.80832,8.11043 -2.0632,1.59469 -2.41334,1.77474 -2.41334,1.24098 z"
       id="path60"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#aa0000;fill-opacity:1;stroke-width:0.353553"
       d="m 144.90866,121.44255 c -6.97836,-3.57494 -10.96706,-7.98292 -13.18472,-14.57066 -0.95816,-2.84629 -0.8795,-9.438315 0.15821,-13.258247 1.02646,-3.778559 4.47991,-10.655109 7.09682,-14.131255 2.41327,-3.205656 7.34155,-8.286211 10.26837,-10.585651 l 1.97764,-1.553728 -0.14035,2.204122 c -0.37326,5.86203 2.62533,10.993928 9.44474,16.164063 1.33917,1.015292 2.00863,1.715264 1.64048,1.715264 -1.42862,0 -5.0712,2.396042 -7.792,5.125471 -8.19454,8.220551 -11.03521,20.729561 -6.52306,28.724651 0.57697,1.02232 0.89361,1.85877 0.70365,1.85877 -0.18996,0 -1.83236,-0.76176 -3.64978,-1.6928 z"
       id="path62"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:#f2f2f2;fill-opacity:1;stroke-width:0.353553"
       d="m 175.94461,135.90141 c -1.29246,-0.33314 -3.31718,-1.3462 -4.1504,-2.07663 -0.55788,-0.48904 -0.82004,-0.42838 -2.82843,0.65453 -1.92067,1.0356 -2.54913,1.19443 -4.74963,1.20036 -2.01672,0.005 -2.73626,-0.14245 -3.51368,-0.72213 -1.60114,-1.19386 -2.34476,-2.45318 -2.38641,-4.04132 -0.0339,-1.29349 0.13911,-1.64323 1.39034,-2.81037 4.57301,-4.26566 16.21126,-4.63785 21.9333,-0.70144 2.49197,1.71433 2.82176,3.82469 0.97662,6.24953 -1.47379,1.93681 -4.24946,2.87184 -6.67171,2.24747 z"
       id="path64"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:url(#meshgradient84);fill-opacity:1;stroke-width:0.25"
       d="m 145.55742,121.57295 c -3.61895,-1.86451 -5.35714,-3.04743 -7.5912,-5.16618 -2.84216,-2.69547 -4.63194,-5.46798 -6.05267,-9.37609 -0.54461,-1.4981 -0.58924,-1.98617 -0.57155,-6.25 0.0163,-3.919188 0.10169,-4.929086 0.55973,-6.617611 1.13238,-4.174486 4.49108,-10.919387 7.3506,-14.761401 2.13406,-2.867295 10.95052,-11.617148 11.71001,-11.62155 0.0534,-3.09e-4 0.0594,0.798051 0.0132,1.774135 -0.27007,5.708498 2.27191,10.371366 8.40305,15.414091 l 2.60686,2.144089 -1.44678,0.720226 c -2.26233,1.126211 -4.29645,2.697353 -6.60971,5.105283 -5.3337,5.551997 -8.24446,12.437598 -8.24446,19.502878 0,3.22744 0.49894,5.56043 1.77864,8.31678 0.53673,1.15605 0.94646,2.13132 0.91051,2.16727 -0.036,0.0359 -1.30325,-0.57242 -2.81624,-1.35192 z"
       id="path76"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /><path
       style="fill:url(#meshgradient98);fill-opacity:1;stroke-width:0.25"
       d="m 194.68451,123.84127 c 0,-0.11738 0.38373,-1.16506 0.85273,-2.32816 1.1257,-2.79168 1.6726,-5.47477 1.83097,-8.98271 0.30945,-6.85411 -1.49723,-12.48777 -5.86603,-18.291711 -2.79285,-3.71029 -4.28811,-4.901635 -12.19165,-9.713675 -7.21651,-4.393743 -9.97992,-6.350913 -12.52462,-8.870503 -1.79957,-1.781805 -2.46344,-2.645835 -3.18405,-4.14405 -2.248,-4.673782 -2.18476,-10.191756 0.19888,-17.35478 0.9267,-2.784785 4.90514,-11.712422 5.57731,-12.515487 0.42378,-0.506304 0.6779,-0.265783 14.26377,13.5 7.60777,7.708518 14.34686,14.690487 14.97575,15.515487 7.9793,10.467473 12.02608,22.973903 10.46149,32.330839 -0.76551,4.57806 -2.57,8.91125 -5.1197,12.29416 -2.16439,2.87168 -9.27485,9.43456 -9.27485,8.56059 z"
       id="path78"
       transform="matrix(0.75000002,0,0,-0.75000002,0,250)" /></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
